DAO设计模式简介
  DAO（Data Access Object，数据访问对象）的主要功能是数据操作，在程序的标准开发架构中归属数据层操作。
  程序的标准开发架构：
  客户层<->显示层<->业务层<->数据层<->资源层
  客户层：因为现在都采用B/S开发架构，所以一般客户都使用浏览器器访问，当然也可以使用其他程序访问
  显示层：使用JSP/Servlet进行页面显示效果
  业务层(Business Object，业务对象)：会将多个原子性的DAO操作进行组合，组合成一个完整的业务逻辑
  数据层(DAO)：提供多个原子性的DAO操作，如增加、修改、删除等，都属于原子性操作。
  
  DAO以接口为操作标准，即客户端依靠DAO实现的接口进行操作，而服务器端要将接口进行具体实现。DAO由以下几个步骤组成
  DatabaseConnection:专门负责数据库的打开与关闭操作的类。
  VO:主要有属性、setter、getter方法组成，VO类中的属性与表中的字段相对应，每一个VO类的对象都表示表中的每一条记录。
  DAO：主要定义操作的接口，定义一系列数据库的原子性操作标准，如增加、修改、删除、按ID查询等
  Impl：DAO接口的真实实现类，完成具体的数据库操作，但是不负责数据库的打开和关闭
  Proxy：代理实现类，主要完成数据库的打开和关闭，并且调用真实实现类对象的操作。
  Factory：工厂类，通过工厂类取得一个DAO的实例化对象。